{% extends 'admin/base_admin.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .category-form-container {
            max-width: 600px;
            margin: 0 auto;
            padding: 2rem;
            background: white;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
        }
        .form-title {
            color: #2c3e50;
            margin-bottom: 1.5rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #3498db;
        }
        .form-group {
            margin-bottom: 1.5rem;
        }
        .form-actions {
            display: flex;
            justify-content: space-between;
            margin-top: 2rem;
        }
        .required-field::after {
            content: " *";
            color: red;
        }
        .is-invalid {
            border-color: #dc3545 !important;
        }
        .invalid-feedback {
            display: none;
            width: 100%;
            margin-top: 0.25rem;
            font-size: 0.875em;
            color: #dc3545;
        }
        .was-validated .form-control:invalid ~ .invalid-feedback {
            display: block;
        }
    </style>
{% endblock %}

{% block admin_body %}
    <div class="container-fluid">
        <div class="category-form-container">
            <h1 class="form-title">
                <i class="fas fa-tag me-2"></i>Ajout d'une nouvelle catégorie
            </h1>

            {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}

            <div class="form-group">
                {{ form_label(form.libelle, null, {'label_attr': {'class': 'required-field'}}) }}
                {{ form_widget(form.libelle, {
                    'attr': {
                        'class': 'form-control',
                        'required': 'required',
                        'placeholder': 'Ex: Roman, Science-Fiction, etc.'
                    }
                }) }}
                {{ form_errors(form.libelle) }}
                <div class="invalid-feedback">Veuillez saisir un nom de catégorie.</div>
            </div>

            <div class="form-group">
                {{ form_label(form.slug, null, {'label_attr': {'class': 'required-field'}}) }}
                <div class="input-group">
                    {{ form_widget(form.slug, {
                        'attr': {
                            'class': 'form-control',
                            'readonly': 'readonly',
                            'required': 'required'
                        }
                    }) }}
                    <button class="btn btn-outline-secondary" type="button" id="edit-slug">
                        <i class="fas fa-edit"></i>
                    </button>
                </div>
                {{ form_errors(form.slug) }}
                <div class="invalid-feedback">Veuillez vérifier le slug.</div>
                <small class="form-text text-muted">Le slug est généré automatiquement mais peut être modifié</small>
            </div>

            <div class="form-group">
                {{ form_label(form.description) }}
                {{ form_widget(form.description, {
                    'attr': {
                        'class': 'form-control',
                        'rows': 3,
                        'placeholder': 'Description de la catégorie (optionnel)'
                    }
                }) }}
                {{ form_errors(form.description) }}
            </div>

            <div class="form-actions">
                <a href="{{ path('app_admin_categorie_all') }}" class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Annuler
                </a>
                <button type="submit" class="btn btn-primary" id="submit-btn">
                    <i class="fas fa-save me-2"></i>Enregistrer
                </button>
            </div>

            {{ form_end(form) }}
        </div>
    </div>
{% endblock %}

{% block title %}Ajout Catégorie | Administration{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Form validation
            const form = document.querySelector('.needs-validation');
            const submitBtn = document.getElementById('submit-btn');

            form.addEventListener('submit', function(event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                    form.classList.add('was-validated');
                }
            }, false);

            // récupérations des champs
            const libelleField = document.getElementById('{{ form.libelle.vars.id }}');
            const slugField = document.getElementById('{{ form.slug.vars.id }}');
            const editSlugBtn = document.getElementById('edit-slug');

            //hedhe ken l admin bich ybaddel f slug
            let slugEditable = false;

            function generateSlug(text) {
                return text
                    .toLowerCase()
                    .normalize('NFD')// ynahhi les diacritiques
                    .replace(/[\u0300-\u036f]/g, '') // ynahhil les symboles
                    .replace(/[^\w\s-]/g, '') // ynahhi les caractères spéciaux
                    .replace(/[\s]+/g, '-')   // ' '=>'-'
                    .replace(/[-]+/g, '-')    // ki yabdew barcha ----- ywalli wahed brk
                    .trim();
            }

            // ll génération automatique
            libelleField.addEventListener('input', function() {
                if (!slugEditable && libelleField.value) {
                    slugField.value = generateSlug(libelleField.value);
                }
            });

            // l ken l admin bich ybaddel slug
            editSlugBtn.addEventListener('click', function() {
                slugEditable = !slugEditable;
                slugField.readOnly = !slugEditable;
                slugField.style.backgroundColor = slugEditable ? '#fff' : '#f8f9fa';
                this.innerHTML = slugEditable
                    ? '<i class="fas fa-lock"></i>'
                    : '<i class="fas fa-edit"></i>';
            });

            // y initializi l champs ken feregh
            if (libelleField.value && !slugField.value) {
                slugField.value = generateSlug(libelleField.value);
            }

            // Client-side validation for required fields
            submitBtn.addEventListener('click', function() {
                const requiredFields = form.querySelectorAll('[required]');
                let isValid = true;

                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        field.classList.add('is-invalid');
                        isValid = false;
                    } else {
                        field.classList.remove('is-invalid');
                    }
                });

                if (!isValid) {
                    form.classList.add('was-validated');
                }
            });
        });
    </script>
{% endblock %}